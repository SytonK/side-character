[gd_scene load_steps=4 format=3 uid="uid://c8y5gqlw68bxh"]

[ext_resource type="Texture2D" uid="uid://d78n857842di" path="res://assets/32x32.png" id="1_fhntq"]

[sub_resource type="GDScript" id="GDScript_edlt6"]
script/source = "extends CharacterBody2D

@export var gravity: float = ProjectSettings.get_setting(\"physics/2d/default_gravity\")
@export var max_fall_speed: float = 500

@export var movement_speed: float = 300

@export var jump_strength: float = 800

@export var double_jump_strength: float = 500
var can_double_jump: bool = true

@onready var dash_duration_timer = $DashDurationTimer
@export var dash_strength: float = 900
@export var dash_duration: float = 10.2
enum {
	LEFT,
	RIGTH
}
var direction = RIGTH
var is_dashing: bool = false
var can_dash: bool = true

@export var stop_dash_on_jump: bool = true
@export var dash_stop_gravity: bool = true

@export var dash_cooldown: float = 0.75
@onready var dash_cooldown_timer = $DashCooldownTimer



func _ready():
	_init_dash()

func _physics_process(delta):
	_apply_gravity(delta)
	_side_movment()
	_recharg_double_jump()
	move_and_slide()

func _input(event):
	if event.is_action_pressed(\"jump\"):
		_jump()
	if event.is_action_released(\"jump\"):
		_stop_jump()
	if event.is_action_pressed(\"dash\"):
		_dash()


func _apply_gravity(delta):
	if not is_on_floor() && !(is_dashing && dash_stop_gravity):
		velocity.y = min(velocity.y + gravity * delta, max_fall_speed)


func _side_movment():
	if !is_dashing:
		velocity.x = (Input.get_action_strength(\"move_right\") - Input.get_action_strength(\"move_left\")) * movement_speed
		if velocity.x > 0:
			direction = RIGTH
		elif velocity.x < 0:
			direction = LEFT


func _jump():
	if is_on_floor():
		_perform_jump()
	elif can_double_jump:
		_perform_double_jump()
	if stop_dash_on_jump:
		is_dashing = false

func _perform_jump():
	velocity.y = -jump_strength

func _perform_double_jump():
	velocity.y = -double_jump_strength
	can_double_jump = false

func _stop_jump():
	velocity.y = max(velocity.y, 0)

func _recharg_double_jump():
	if is_on_floor():
		can_double_jump = true


func _init_dash():
	dash_duration_timer.wait_time = dash_duration
	dash_cooldown_timer.wait_time = dash_cooldown

func _dash():
	if can_dash:
		is_dashing = true
		can_dash = false
		dash_cooldown_timer.start()
		velocity.x = (1 if direction == RIGTH else -1) * dash_strength
		dash_duration_timer.start()

func _on_dash_duration_timer_timeout():
	is_dashing = false

func _on_dash_cooldown_timer_timeout():
	can_dash = true
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_xc7w2"]
size = Vector2(32, 32)

[node name="Player" type="CharacterBody2D"]
collision_layer = 2
script = SubResource("GDScript_edlt6")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("RectangleShape2D_xc7w2")

[node name="Sprite2D" type="Sprite2D" parent="."]
self_modulate = Color(0, 0.627451, 0.784314, 1)
texture = ExtResource("1_fhntq")

[node name="DashDurationTimer" type="Timer" parent="."]

[node name="DashCooldownTimer" type="Timer" parent="."]

[connection signal="timeout" from="DashDurationTimer" to="." method="_on_dash_duration_timer_timeout"]
[connection signal="timeout" from="DashCooldownTimer" to="." method="_on_dash_cooldown_timer_timeout"]
